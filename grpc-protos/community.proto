syntax = "proto3";
package community;

option go_package = "github.com/abhirajranjan/spaces/grpc-protos/community";

enum DEFAULTS {
  STRING_DEFAULT = 0;
  INT32_DEFAULT = 1;
}

enum NUMBER_NUM {
  one = 0;
  two = 1;
  three = 2;
}

enum STATUS {
  ERROR = 0;
  NOT_FOUND = 1;
  WRONG_FORMAT = 2;
  OK = 3;
}

service CommunityService {
  // reading data 
  rpc GetCommunity(CommunityGetRequest) returns (CommunityMetaData) {}
  rpc CommunitySearch(CommunityGetRequest) returns (stream CommunityMetaData) {}
  
  // posting data
  rpc NewCommunity(CommunityMetaData) returns (Status) {}
  rpc AddSpace(CommunityMetaData) returns (Status) {}
}

message Status {
  STATUS status = 1; 
}

// temp
message SpacesCompact {
  string id = 1;
}

// request community data : Request
message CommunityGetRequest {
  NUMBER_NUM requestType = 1; // either 1 or 0
  optional string id = 2; // search by id : requestType must be 0 
  optional string query = 3; // search by query : requestType must be 1
  optional string page_number = 4; // parameters for query
  optional int32 request_per_page = 5; // parameters for query
}

// get community data : Response
message CommunityMetaData {
  optional STATUS status = 1; 
  string id = 2; // unique id of community
  string name = 3; // name of community
  optional string Description = 4; // description of community
  optional string banner = 5; // banner source in server 
  repeated SpacesCompact spaces = 6; // spaces id
}
