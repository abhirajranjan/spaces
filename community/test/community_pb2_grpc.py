# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import community_pb2 as community__pb2


class CommunityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCommunity = channel.unary_unary(
                '/grpc.CommunityService/GetCommunity',
                request_serializer=community__pb2.CommunityGetRequest.SerializeToString,
                response_deserializer=community__pb2.CommunityMetaData.FromString,
                )
        self.CommunitySearch = channel.unary_stream(
                '/grpc.CommunityService/CommunitySearch',
                request_serializer=community__pb2.CommunityGetRequest.SerializeToString,
                response_deserializer=community__pb2.CommunityMetaData.FromString,
                )
        self.GetSpaces = channel.unary_stream(
                '/grpc.CommunityService/GetSpaces',
                request_serializer=community__pb2.CommunityGetRequest.SerializeToString,
                response_deserializer=community__pb2.CommunityMetaData.FromString,
                )
        self.NewCommunity = channel.unary_unary(
                '/grpc.CommunityService/NewCommunity',
                request_serializer=community__pb2.CommunityMetaData.SerializeToString,
                response_deserializer=community__pb2.MStatus.FromString,
                )


class CommunityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCommunity(self, request, context):
        """reading data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommunitySearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpaces(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewCommunity(self, request, context):
        """posting data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommunityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCommunity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCommunity,
                    request_deserializer=community__pb2.CommunityGetRequest.FromString,
                    response_serializer=community__pb2.CommunityMetaData.SerializeToString,
            ),
            'CommunitySearch': grpc.unary_stream_rpc_method_handler(
                    servicer.CommunitySearch,
                    request_deserializer=community__pb2.CommunityGetRequest.FromString,
                    response_serializer=community__pb2.CommunityMetaData.SerializeToString,
            ),
            'GetSpaces': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSpaces,
                    request_deserializer=community__pb2.CommunityGetRequest.FromString,
                    response_serializer=community__pb2.CommunityMetaData.SerializeToString,
            ),
            'NewCommunity': grpc.unary_unary_rpc_method_handler(
                    servicer.NewCommunity,
                    request_deserializer=community__pb2.CommunityMetaData.FromString,
                    response_serializer=community__pb2.MStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.CommunityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CommunityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCommunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.CommunityService/GetCommunity',
            community__pb2.CommunityGetRequest.SerializeToString,
            community__pb2.CommunityMetaData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommunitySearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/grpc.CommunityService/CommunitySearch',
            community__pb2.CommunityGetRequest.SerializeToString,
            community__pb2.CommunityMetaData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpaces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/grpc.CommunityService/GetSpaces',
            community__pb2.CommunityGetRequest.SerializeToString,
            community__pb2.CommunityMetaData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewCommunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.CommunityService/NewCommunity',
            community__pb2.CommunityMetaData.SerializeToString,
            community__pb2.MStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
