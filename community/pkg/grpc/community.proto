syntax = "proto3";
package grpc;

option go_package = "github.com/abhirajranjan/spaces/community/pkg/grpc";

enum DEFAULTS {
  STRING_DEFAULT = 0;
  INT32_DEFAULT = 1;
}

enum NUMBER_NUM {
  one = 0;
  two = 1;
  three = 2;
}

enum STATUS {
  ERROR = 0;
  NOT_FOUND = 1;
  WRONG_FORMAT = 2;
  OK = 3;
}

service CommunityService {
  // reading data
  rpc GetCommunity(CommunityGetRequest) returns (CommunityMetaData) {}
  rpc CommunitySearch(CommunityGetRequest) returns (stream CommunityMetaData) {}
  rpc GetSpaces(CommunityGetRequest) returns (stream CommunityMetaData) {}
  // posting data
  rpc NewCommunity(CommunityMetaData) returns (MStatus) {}
}

message MStatus {
  STATUS Status = 1;
}

// temp
message SpacesCompact {
  string Id = 1;
}

// request community data : Request
// TODO: search by spaces
message CommunityGetRequest {
  int64 id = 1;
  string Name = 2;
  string Tag = 3;
}

// get community data : Response
message CommunityMetaData {
  // unique id of community
  int64 Id = 1;
  // name of community
  string Name = 2;
  // searchable short name {optional}
  string Tag = 3;
  // description of community
  string Description = 4;
  // banner source in server
  string Banner = 5;
  // spaces id
  repeated SpacesCompact Spaces = 6;
}
